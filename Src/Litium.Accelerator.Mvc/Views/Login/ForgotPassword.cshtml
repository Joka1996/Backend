@using Litium.Web;
@using Litium.Web.Mvc;
@model Litium.Accelerator.ViewModels.Login.ForgotPasswordViewModel

<div class="full-height">
    <div class="form__container">
        @if (!User.Identity.IsAuthenticated)
        {
            <h1>@Model.Title</h1>
            if (!string.IsNullOrWhiteSpace(Model.Message))
            {
                <div>
                    <div data-alert class="alert alert-box success">
                        @Model.Message
                    </div>
                    @if (Model.LoginLink != null)
                    {
                        <div>
                            <a href="@Model.LoginLink.Href">@Html.WebSiteString("forgotpassword.clicktologin")</a>
                        </div>
                    }
                </div>
            }
            else
            {
                if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
                {
                    <div>
                        <div class="form__validator">
                            <small class="form__validator--error">@Model.ErrorMessage</small>
                        </div>
                    </div>
                }

                using (Html.BeginForm("ForgotPassword", "Login"))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(x => x.RedirectUrl)
                    <fieldset class="form">
                        <div>
                            @Html.LabelFor(x => x.ForgotPasswordForm.Email, "forgotpassword.email".AsWebsiteText(), new { @class = "form__label" })
                            @Html.TextBoxFor(x => x.ForgotPasswordForm.Email, new { @class = "form__input", @autocomplete = "email" })
                            @Html.ValidationMessageFor(x => x.ForgotPasswordForm.Email, string.Empty, new { @class = "form__validator--error" })
                        </div>
                        <input type="submit" class="form__button form__button--expand" value="@Html.WebSiteString("login.magiclink.send")" />
                        @if (Model.LoginLink != null)
                        {
                            <div>
                                <a href="@Model.LoginLink.Href">@Html.WebSiteString("forgotpassword.backtologinpage")</a>
                            </div>
                        }
                    </fieldset>
                }
            }
        }
        else
        {
            <fieldset class="form">
                <p>@(string.Format("forgotpassword.alreadylogin".AsWebsiteText(), User.Identity.Name))</p>
                @Html.ActionLink("forgotpassword.logout".AsWebsiteText(), "Logout", "Login", null, new { @class = "button submit small" })
            </fieldset>
        }

    </div>
</div>